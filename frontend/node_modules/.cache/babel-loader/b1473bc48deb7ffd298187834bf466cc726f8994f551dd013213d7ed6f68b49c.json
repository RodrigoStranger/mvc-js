{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:4000/api';\nexport const libroService = {\n  getAll: async () => {\n    try {\n      console.log('Haciendo petición a:', `${API_URL}/libros`);\n      const response = await axios.get(`${API_URL}/libros`, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Respuesta completa de la API:', response);\n      // Retornamos el objeto completo de respuesta\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener los libros:');\n      if (error.response) {\n        // La petición fue hecha y el servidor respondió con un status diferente a 2xx\n        console.error('Datos de la respuesta:', error.response.data);\n        console.error('Status:', error.response.status);\n        console.error('Headers:', error.response.headers);\n      } else if (error.request) {\n        // La petición fue hecha pero no se recibió respuesta\n        console.error('No se recibió respuesta del servidor');\n        console.error('Request:', error.request);\n      } else {\n        // Algo pasó en la configuración de la petición que lanzó un error\n        console.error('Error:', error.message);\n      }\n      console.error('Configuración del error:', error.config);\n      throw error;\n    }\n  },\n  getById: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/libros/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al obtener el libro:', error);\n      throw error;\n    }\n  },\n  create: async libro => {\n    try {\n      const response = await axios.post(`${API_URL}/libros`, libro);\n      return response.data;\n    } catch (error) {\n      console.error('Error al crear el libro:', error);\n      throw error;\n    }\n  },\n  update: async (id, libro) => {\n    try {\n      const response = await axios.put(`${API_URL}/libros/${id}`, libro);\n      return response.data;\n    } catch (error) {\n      console.error('Error al actualizar el libro:', error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await axios.delete(`${API_URL}/libros/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error al eliminar el libro:', error);\n      throw error;\n    }\n  }\n};\nexport default libroService;","map":{"version":3,"names":["axios","API_URL","libroService","getAll","console","log","response","get","headers","data","error","status","request","message","config","getById","id","create","libro","post","update","put","delete"],"sources":["C:/Users/riexd/Desktop/mvc-js/frontend/src/services/libroService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:4000/api';\n\nexport const libroService = {\n    getAll: async () => {\n        try {\n            console.log('Haciendo petición a:', `${API_URL}/libros`);\n            const response = await axios.get(`${API_URL}/libros`, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n            console.log('Respuesta completa de la API:', response);\n            // Retornamos el objeto completo de respuesta\n            return response.data;\n        } catch (error) {\n            console.error('Error al obtener los libros:');\n            if (error.response) {\n                // La petición fue hecha y el servidor respondió con un status diferente a 2xx\n                console.error('Datos de la respuesta:', error.response.data);\n                console.error('Status:', error.response.status);\n                console.error('Headers:', error.response.headers);\n            } else if (error.request) {\n                // La petición fue hecha pero no se recibió respuesta\n                console.error('No se recibió respuesta del servidor');\n                console.error('Request:', error.request);\n            } else {\n                // Algo pasó en la configuración de la petición que lanzó un error\n                console.error('Error:', error.message);\n            }\n            console.error('Configuración del error:', error.config);\n            throw error;\n        }\n    },\n    \n    getById: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/libros/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error al obtener el libro:', error);\n            throw error;\n        }\n    },\n    \n    create: async (libro) => {\n        try {\n            const response = await axios.post(`${API_URL}/libros`, libro);\n            return response.data;\n        } catch (error) {\n            console.error('Error al crear el libro:', error);\n            throw error;\n        }\n    },\n    \n    update: async (id, libro) => {\n        try {\n            const response = await axios.put(`${API_URL}/libros/${id}`, libro);\n            return response.data;\n        } catch (error) {\n            console.error('Error al actualizar el libro:', error);\n            throw error;\n        }\n    },\n    \n    delete: async (id) => {\n        try {\n            const response = await axios.delete(`${API_URL}/libros/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error al eliminar el libro:', error);\n            throw error;\n        }\n    }\n};\n\nexport default libroService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}