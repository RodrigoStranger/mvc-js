{"ast":null,"code":"import axios from'axios';// URL base de la API\nconst API_URL='http://localhost:4000/api';export const libroService={// Obtiene todos los libros\ngetAll:async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/libros\"));return response.data;}catch(error){console.error('Error al obtener los libros:',error);throw error;}},// Obtiene un libro por su ID\ngetById:async id=>{try{const response=await axios.get(\"\".concat(API_URL,\"/libros/\").concat(id));return response.data;}catch(error){console.error('Error al obtener el libro:',error);throw error;}},// Crea un nuevo libro\ncreate:async libro=>{try{const response=await axios.post(\"\".concat(API_URL,\"/libros\"),libro);return response.data;}catch(error){console.error('Error al crear el libro:',error);// Si el servidor devuelve un mensaje de error, lo extraemos\nif(error.response&&error.response.data&&error.response.data.message){throw new Error(error.response.data.message);}else if(error.message){throw new Error(error.message);}else{throw new Error('Error al crear el libro');}}},// Actualiza un libro existente\nupdate:async(id,libro)=>{try{const response=await axios.put(\"\".concat(API_URL,\"/libros/\").concat(id),libro);return response.data;}catch(error){var _error$response;console.error('Error al actualizar el libro:',error);// Devolvemos el error completo para manejarlo en el componente\nreturn Promise.reject({response:{data:((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{message:error.message||'Error al actualizar el libro'}}});}},// Elimina un libro existente\ndelete:async id=>{try{const response=await axios.delete(\"\".concat(API_URL,\"/libros/\").concat(id));return response.data;}catch(error){console.error('Error al eliminar el libro:',error);throw error;}}};// Exportar el servicio\nexport default libroService;","map":{"version":3,"names":["axios","API_URL","libroService","getAll","response","get","concat","data","error","console","getById","id","create","libro","post","message","Error","update","put","_error$response","Promise","reject","delete"],"sources":["C:/Users/riexd/Desktop/mvc-js/frontend/src/services/libroService.js"],"sourcesContent":["import axios from 'axios';\n\n// URL base de la API\nconst API_URL = 'http://localhost:4000/api';\n\nexport const libroService = {\n\n    // Obtiene todos los libros\n    getAll: async () => {\n        try {\n            const response = await axios.get(`${API_URL}/libros`);\n            return response.data;\n        } catch (error) {\n            console.error('Error al obtener los libros:', error);\n            throw error;\n        }\n    },\n    \n    // Obtiene un libro por su ID\n    getById: async (id) => {\n        try {\n            const response = await axios.get(`${API_URL}/libros/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error al obtener el libro:', error);\n            throw error;\n        }\n    },\n    \n    // Crea un nuevo libro\n    create: async (libro) => {\n        try {\n            const response = await axios.post(`${API_URL}/libros`, libro);\n            return response.data;\n        } catch (error) {\n            console.error('Error al crear el libro:', error);\n            // Si el servidor devuelve un mensaje de error, lo extraemos\n            if (error.response && error.response.data && error.response.data.message) {\n                throw new Error(error.response.data.message);\n            } else if (error.message) {\n                throw new Error(error.message);\n            } else {\n                throw new Error('Error al crear el libro');\n            }\n        }\n    },\n    \n    // Actualiza un libro existente\n    update: async (id, libro) => {\n        try {\n            const response = await axios.put(`${API_URL}/libros/${id}`, libro);\n            return response.data;\n        } catch (error) {\n            console.error('Error al actualizar el libro:', error);\n            // Devolvemos el error completo para manejarlo en el componente\n            return Promise.reject({\n                response: {\n                    data: error.response?.data || { message: error.message || 'Error al actualizar el libro' }\n                }\n            });\n        }\n    },\n    \n    // Elimina un libro existente\n    delete: async (id) => {\n        try {\n            const response = await axios.delete(`${API_URL}/libros/${id}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error al eliminar el libro:', error);\n            throw error;\n        }\n    }\n};\n\n// Exportar el servicio\nexport default libroService;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,OAAO,CAAG,2BAA2B,CAE3C,MAAO,MAAM,CAAAC,YAAY,CAAG,CAExB;AACAC,MAAM,CAAE,KAAAA,CAAA,GAAY,CAChB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,GAAG,IAAAC,MAAA,CAAIL,OAAO,WAAS,CAAC,CACrD,MAAO,CAAAG,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED;AACAE,OAAO,CAAE,KAAO,CAAAC,EAAE,EAAK,CACnB,GAAI,CACA,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACK,GAAG,IAAAC,MAAA,CAAIL,OAAO,aAAAK,MAAA,CAAWK,EAAE,CAAE,CAAC,CAC3D,MAAO,CAAAP,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC,CAED;AACAI,MAAM,CAAE,KAAO,CAAAC,KAAK,EAAK,CACrB,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACc,IAAI,IAAAR,MAAA,CAAIL,OAAO,YAAWY,KAAK,CAAC,CAC7D,MAAO,CAAAT,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD;AACA,GAAIA,KAAK,CAACJ,QAAQ,EAAII,KAAK,CAACJ,QAAQ,CAACG,IAAI,EAAIC,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACQ,OAAO,CAAE,CACtE,KAAM,IAAI,CAAAC,KAAK,CAACR,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAACQ,OAAO,CAAC,CAChD,CAAC,IAAM,IAAIP,KAAK,CAACO,OAAO,CAAE,CACtB,KAAM,IAAI,CAAAC,KAAK,CAACR,KAAK,CAACO,OAAO,CAAC,CAClC,CAAC,IAAM,CACH,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC9C,CACJ,CACJ,CAAC,CAED;AACAC,MAAM,CAAE,KAAAA,CAAON,EAAE,CAAEE,KAAK,GAAK,CACzB,GAAI,CACA,KAAM,CAAAT,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACkB,GAAG,IAAAZ,MAAA,CAAIL,OAAO,aAAAK,MAAA,CAAWK,EAAE,EAAIE,KAAK,CAAC,CAClE,MAAO,CAAAT,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,KAAAW,eAAA,CACZV,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD;AACA,MAAO,CAAAY,OAAO,CAACC,MAAM,CAAC,CAClBjB,QAAQ,CAAE,CACNG,IAAI,CAAE,EAAAY,eAAA,CAAAX,KAAK,CAACJ,QAAQ,UAAAe,eAAA,iBAAdA,eAAA,CAAgBZ,IAAI,GAAI,CAAEQ,OAAO,CAAEP,KAAK,CAACO,OAAO,EAAI,8BAA+B,CAC7F,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAED;AACAO,MAAM,CAAE,KAAO,CAAAX,EAAE,EAAK,CAClB,GAAI,CACA,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAJ,KAAK,CAACsB,MAAM,IAAAhB,MAAA,CAAIL,OAAO,aAAAK,MAAA,CAAWK,EAAE,CAAE,CAAC,CAC9D,MAAO,CAAAP,QAAQ,CAACG,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,KAAM,CAAAA,KAAK,CACf,CACJ,CACJ,CAAC,CAED;AACA,cAAe,CAAAN,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}